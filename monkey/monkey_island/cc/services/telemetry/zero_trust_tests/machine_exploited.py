from common.data.zero_trust_consts import *
from monkey_island.cc.models import Monkey
from monkey_island.cc.models.zero_trust.aggregate_finding import AggregateFinding
from monkey_island.cc.models.zero_trust.event import Event
from monkey_island.cc.models.zero_trust.finding import Finding


def test_machine_exploited(telemetry_json):
    current_monkey = Monkey.get_single_monkey_by_guid(telemetry_json['monkey_guid'])
    events = [
        Event.create_event(
            title="Exploit attempt",
            message="Monkey on {} attempted to exploit {} using {}.".format(
                current_monkey.hostname,
                telemetry_json['data']['machine']['ip_addr'],
                telemetry_json['data']['exploiter']),
            event_type=EVENT_TYPE_MONKEY_NETWORK,
            timestamp=telemetry_json['timestamp']
        )
    ]

    status = STATUS_PASSED

    if telemetry_json['data']['result']:
        events.append(
            Event.create_event(
                title="Exploit success!",
                message="Monkey on {} successfully exploited {} using {}.".format(
                    current_monkey.hostname,
                    telemetry_json['data']['machine']['ip_addr'],
                    telemetry_json['data']['exploiter']),
                event_type=EVENT_TYPE_MONKEY_NETWORK,
                timestamp=telemetry_json['timestamp'])
        )
        status = STATUS_FAILED

    AggregateFinding.create_or_add_to_existing(
        test=TEST_MACHINE_EXPLOITED,
        status=status,
        events=events
    )

    AggregateFinding.create_or_add_to_existing(
        test=TEST_MALICIOUS_ACTIVITY_TIMELINE,
        status=STATUS_INCONCLUSIVE,
        events=events
    )
